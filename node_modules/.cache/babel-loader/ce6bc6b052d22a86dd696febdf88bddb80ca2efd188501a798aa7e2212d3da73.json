{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20213\\\\Desktop\\\\web\\\\src\\\\context\\\\AudioContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useRef, useEffect } from 'react';\n\n// 音频数据类型定义\n\n// 音频上下文接口\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 创建上下文\nconst AudioContext = /*#__PURE__*/createContext(null);\n\n// Provider组件\nexport const AudioProvider = ({\n  children\n}) => {\n  _s();\n  const [audioData, setAudioData] = useState({\n    title: '',\n    artist: '',\n    duration: 0,\n    currentTime: 0,\n    isPlaying: false,\n    volume: 1\n  });\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const audioElementRef = useRef(null);\n  const sourceNodeRef = useRef(null);\n  useEffect(() => {\n    audioContextRef.current = new AudioContext();\n    analyserRef.current = audioContextRef.current.createAnalyser();\n    analyserRef.current.fftSize = 2048;\n    return () => {\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n    };\n  }, []);\n  const loadAudio = async file => {\n    const url = URL.createObjectURL(file);\n    const audio = new Audio(url);\n    audioElementRef.current = audio;\n    audio.addEventListener('loadedmetadata', () => {\n      setAudioData(prev => ({\n        ...prev,\n        title: file.name,\n        artist: 'Unknown Artist',\n        duration: audio.duration\n      }));\n    });\n    audio.addEventListener('timeupdate', () => {\n      setAudioData(prev => ({\n        ...prev,\n        currentTime: audio.currentTime\n      }));\n    });\n    audio.addEventListener('ended', () => {\n      setAudioData(prev => ({\n        ...prev,\n        isPlaying: false,\n        currentTime: 0\n      }));\n    });\n    if (sourceNodeRef.current) {\n      sourceNodeRef.current.disconnect();\n    }\n    sourceNodeRef.current = audioContextRef.current.createMediaElementSource(audio);\n    sourceNodeRef.current.connect(analyserRef.current);\n    analyserRef.current.connect(audioContextRef.current.destination);\n  };\n  const play = () => {\n    if (audioElementRef.current) {\n      audioElementRef.current.play();\n      setAudioData(prev => ({\n        ...prev,\n        isPlaying: true\n      }));\n    }\n  };\n  const pause = () => {\n    if (audioElementRef.current) {\n      audioElementRef.current.pause();\n      setAudioData(prev => ({\n        ...prev,\n        isPlaying: false\n      }));\n    }\n  };\n  const stop = () => {\n    if (audioElementRef.current) {\n      audioElementRef.current.pause();\n      audioElementRef.current.currentTime = 0;\n      setAudioData(prev => ({\n        ...prev,\n        isPlaying: false,\n        currentTime: 0\n      }));\n    }\n  };\n  const seek = time => {\n    if (audioElementRef.current) {\n      audioElementRef.current.currentTime = time;\n      setAudioData(prev => ({\n        ...prev,\n        currentTime: time\n      }));\n    }\n  };\n  const setVolume = volume => {\n    if (audioElementRef.current) {\n      audioElementRef.current.volume = volume;\n      setAudioData(prev => ({\n        ...prev,\n        volume\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AudioContext.Provider, {\n    value: {\n      audioData,\n      loadAudio,\n      play,\n      pause,\n      stop,\n      seek,\n      setVolume,\n      audioContext: audioContextRef.current,\n      analyser: analyserRef.current,\n      audioElement: audioElementRef.current\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n\n// 使用上下文的Hook\n_s(AudioProvider, \"SlxTj5HEyyRIYPeu5iSfvL68vA8=\");\n_c = AudioProvider;\nexport const useAudioContext = () => {\n  _s2();\n  const context = useContext(AudioContext);\n  if (!context) {\n    throw new Error('useAudioContext must be used within an AudioProvider');\n  }\n  return context;\n};\n\n// 迷你播放器组件，固定在屏幕底部\n_s2(useAudioContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const MiniPlayer = () => {\n  _s3();\n  const {\n    isPlaying,\n    currentTrack,\n    play,\n    pause,\n    currentTime,\n    duration,\n    seek,\n    volume,\n    setVolume\n  } = useAudioContext();\n\n  // 如果没有正在播放的曲目，不显示迷你播放器\n  if (!currentTrack) return null;\n\n  // 格式化时间显示\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n\n  // 计算进度百分比\n  const progressPercent = (currentTime / duration * 100 || 0) + '%';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(26, 26, 26, 0.95)',\n      padding: '10px 20px',\n      zIndex: 1000,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      backdropFilter: 'blur(10px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: isPlaying ? pause : play,\n        style: {\n          backgroundColor: '#9c27b0',\n          color: 'white',\n          border: 'none',\n          borderRadius: '50%',\n          width: '36px',\n          height: '36px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          cursor: 'pointer'\n        },\n        children: isPlaying ? '❚❚' : '▶'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'white',\n            fontSize: '0.9rem',\n            marginBottom: '4px'\n          },\n          children: currentTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#aaa',\n            fontSize: '0.8rem'\n          },\n          children: [formatTime(currentTime), \" / \", formatTime(duration)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: '0 20px',\n        cursor: 'pointer'\n      },\n      onClick: e => {\n        const rect = e.currentTarget.getBoundingClientRect();\n        const offsetX = e.clientX - rect.left;\n        const percentage = offsetX / rect.width;\n        seek(percentage * duration);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '4px',\n          backgroundColor: '#333',\n          borderRadius: '2px',\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            height: '100%',\n            width: progressPercent,\n            backgroundColor: '#ba68c8',\n            borderRadius: '2px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '10px',\n        width: '120px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#aaa',\n          fontSize: '0.8rem'\n        },\n        children: [Math.round(volume * 100), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.01\",\n        value: volume,\n        onChange: e => setVolume(parseFloat(e.target.value)),\n        style: {\n          width: '80px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s3(MiniPlayer, \"G/ebnUy89E8Xz6eJWo2vfWxp7bw=\", false, function () {\n  return [useAudioContext];\n});\n_c2 = MiniPlayer;\nvar _c, _c2;\n$RefreshReg$(_c, \"AudioProvider\");\n$RefreshReg$(_c2, \"MiniPlayer\");","map":{"version":3,"names":["React","createContext","useContext","useState","useRef","useEffect","jsxDEV","_jsxDEV","AudioContext","AudioProvider","children","_s","audioData","setAudioData","title","artist","duration","currentTime","isPlaying","volume","audioContextRef","analyserRef","audioElementRef","sourceNodeRef","current","createAnalyser","fftSize","close","loadAudio","file","url","URL","createObjectURL","audio","Audio","addEventListener","prev","name","disconnect","createMediaElementSource","connect","destination","play","pause","stop","seek","time","setVolume","Provider","value","audioContext","analyser","audioElement","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAudioContext","_s2","context","Error","MiniPlayer","_s3","currentTrack","formatTime","minutes","Math","floor","seconds","progressPercent","style","position","bottom","left","right","backgroundColor","padding","zIndex","display","alignItems","justifyContent","backdropFilter","gap","onClick","color","border","borderRadius","width","height","cursor","fontSize","marginBottom","flex","e","rect","currentTarget","getBoundingClientRect","offsetX","clientX","percentage","top","round","type","min","max","step","onChange","parseFloat","target","_c2","$RefreshReg$"],"sources":["C:/Users/20213/Desktop/web/src/context/AudioContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useRef, useEffect } from 'react';\r\n\r\n// 音频数据类型定义\r\ninterface AudioData {\r\n  title: string;\r\n  artist: string;\r\n  duration: number;\r\n  currentTime: number;\r\n  isPlaying: boolean;\r\n  volume: number;\r\n}\r\n\r\n// 音频上下文接口\r\ninterface AudioContextType {\r\n  audioData: AudioData;\r\n  loadAudio: (file: File) => Promise<void>;\r\n  play: () => void;\r\n  pause: () => void;\r\n  stop: () => void;\r\n  seek: (time: number) => void;\r\n  setVolume: (volume: number) => void;\r\n  audioContext: AudioContext | null;\r\n  analyser: AnalyserNode | null;\r\n  audioElement: HTMLAudioElement | null;\r\n}\r\n\r\n// 创建上下文\r\nconst AudioContext = createContext<AudioContextType | null>(null);\r\n\r\n// Provider组件\r\nexport const AudioProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [audioData, setAudioData] = useState<AudioData>({\r\n    title: '',\r\n    artist: '',\r\n    duration: 0,\r\n    currentTime: 0,\r\n    isPlaying: false,\r\n    volume: 1,\r\n  });\r\n\r\n  const audioContextRef = useRef<AudioContext | null>(null);\r\n  const analyserRef = useRef<AnalyserNode | null>(null);\r\n  const audioElementRef = useRef<HTMLAudioElement | null>(null);\r\n  const sourceNodeRef = useRef<MediaElementAudioSourceNode | null>(null);\r\n\r\n  useEffect(() => {\r\n    audioContextRef.current = new AudioContext();\r\n    analyserRef.current = audioContextRef.current.createAnalyser();\r\n    analyserRef.current.fftSize = 2048;\r\n\r\n    return () => {\r\n      if (audioContextRef.current) {\r\n        audioContextRef.current.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const loadAudio = async (file: File) => {\r\n    const url = URL.createObjectURL(file);\r\n    const audio = new Audio(url);\r\n    audioElementRef.current = audio;\r\n\r\n    audio.addEventListener('loadedmetadata', () => {\r\n      setAudioData(prev => ({\r\n        ...prev,\r\n        title: file.name,\r\n        artist: 'Unknown Artist',\r\n        duration: audio.duration,\r\n      }));\r\n    });\r\n\r\n    audio.addEventListener('timeupdate', () => {\r\n      setAudioData(prev => ({\r\n        ...prev,\r\n        currentTime: audio.currentTime,\r\n      }));\r\n    });\r\n\r\n    audio.addEventListener('ended', () => {\r\n      setAudioData(prev => ({\r\n        ...prev,\r\n        isPlaying: false,\r\n        currentTime: 0,\r\n      }));\r\n    });\r\n\r\n    if (sourceNodeRef.current) {\r\n      sourceNodeRef.current.disconnect();\r\n    }\r\n\r\n    sourceNodeRef.current = audioContextRef.current!.createMediaElementSource(audio);\r\n    sourceNodeRef.current.connect(analyserRef.current!);\r\n    analyserRef.current!.connect(audioContextRef.current!.destination);\r\n  };\r\n\r\n  const play = () => {\r\n    if (audioElementRef.current) {\r\n      audioElementRef.current.play();\r\n      setAudioData(prev => ({ ...prev, isPlaying: true }));\r\n    }\r\n  };\r\n\r\n  const pause = () => {\r\n    if (audioElementRef.current) {\r\n      audioElementRef.current.pause();\r\n      setAudioData(prev => ({ ...prev, isPlaying: false }));\r\n    }\r\n  };\r\n\r\n  const stop = () => {\r\n    if (audioElementRef.current) {\r\n      audioElementRef.current.pause();\r\n      audioElementRef.current.currentTime = 0;\r\n      setAudioData(prev => ({\r\n        ...prev,\r\n        isPlaying: false,\r\n        currentTime: 0,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const seek = (time: number) => {\r\n    if (audioElementRef.current) {\r\n      audioElementRef.current.currentTime = time;\r\n      setAudioData(prev => ({ ...prev, currentTime: time }));\r\n    }\r\n  };\r\n\r\n  const setVolume = (volume: number) => {\r\n    if (audioElementRef.current) {\r\n      audioElementRef.current.volume = volume;\r\n      setAudioData(prev => ({ ...prev, volume }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AudioContext.Provider\r\n      value={{\r\n        audioData,\r\n        loadAudio,\r\n        play,\r\n        pause,\r\n        stop,\r\n        seek,\r\n        setVolume,\r\n        audioContext: audioContextRef.current,\r\n        analyser: analyserRef.current,\r\n        audioElement: audioElementRef.current,\r\n      }}\r\n    >\r\n      {children}\r\n    </AudioContext.Provider>\r\n  );\r\n};\r\n\r\n// 使用上下文的Hook\r\nexport const useAudioContext = () => {\r\n  const context = useContext(AudioContext);\r\n  if (!context) {\r\n    throw new Error('useAudioContext must be used within an AudioProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// 迷你播放器组件，固定在屏幕底部\r\nexport const MiniPlayer: React.FC = () => {\r\n  const { \r\n    isPlaying, \r\n    currentTrack, \r\n    play, \r\n    pause, \r\n    currentTime, \r\n    duration,\r\n    seek,\r\n    volume,\r\n    setVolume\r\n  } = useAudioContext();\r\n\r\n  // 如果没有正在播放的曲目，不显示迷你播放器\r\n  if (!currentTrack) return null;\r\n\r\n  // 格式化时间显示\r\n  const formatTime = (time: number) => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = Math.floor(time % 60);\r\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n  };\r\n\r\n  // 计算进度百分比\r\n  const progressPercent = ((currentTime / duration) * 100 || 0) + '%';\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      backgroundColor: 'rgba(26, 26, 26, 0.95)',\r\n      padding: '10px 20px',\r\n      zIndex: 1000,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      backdropFilter: 'blur(10px)'\r\n    }}>\r\n      <div style={{ display: 'flex', alignItems: 'center', gap: '15px' }}>\r\n        <button \r\n          onClick={isPlaying ? pause : play}\r\n          style={{\r\n            backgroundColor: '#9c27b0',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '50%',\r\n            width: '36px',\r\n            height: '36px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          {isPlaying ? '❚❚' : '▶'}\r\n        </button>\r\n        <div>\r\n          <div style={{ color: 'white', fontSize: '0.9rem', marginBottom: '4px' }}>\r\n            {currentTrack}\r\n          </div>\r\n          <div style={{ color: '#aaa', fontSize: '0.8rem' }}>\r\n            {formatTime(currentTime)} / {formatTime(duration)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ flex: 1, padding: '0 20px', cursor: 'pointer' }} \r\n           onClick={(e) => {\r\n             const rect = e.currentTarget.getBoundingClientRect();\r\n             const offsetX = e.clientX - rect.left;\r\n             const percentage = offsetX / rect.width;\r\n             seek(percentage * duration);\r\n           }}>\r\n        <div style={{ \r\n          height: '4px', \r\n          backgroundColor: '#333',\r\n          borderRadius: '2px',\r\n          position: 'relative'\r\n        }}>\r\n          <div style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            height: '100%',\r\n            width: progressPercent,\r\n            backgroundColor: '#ba68c8',\r\n            borderRadius: '2px'\r\n          }} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ display: 'flex', alignItems: 'center', gap: '10px', width: '120px' }}>\r\n        <span style={{ color: '#aaa', fontSize: '0.8rem' }}>\r\n          {Math.round(volume * 100)}%\r\n        </span>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          step=\"0.01\"\r\n          value={volume}\r\n          onChange={(e) => setVolume(parseFloat(e.target.value))}\r\n          style={{ width: '80px' }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}