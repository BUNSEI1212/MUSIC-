{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20213\\\\Desktop\\\\web\\\\src\\\\context\\\\AudioContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useAudioAnalyzer } from '../hooks/useAudioAnalyzer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioContext = /*#__PURE__*/createContext(null);\nexport const useAudioContext = () => {\n  _s();\n  const context = useContext(AudioContext);\n  if (!context) {\n    throw new Error('useAudioContext must be used within an AudioProvider');\n  }\n  return context;\n};\n_s(useAudioContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AudioProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    audioData,\n    isPlaying,\n    audioRef,\n    loadAudio,\n    loadAudioFromUrl,\n    play,\n    pause,\n    stop,\n    setVolume,\n    seek\n  } = useAudioAnalyzer();\n  const [currentTrack, setCurrentTrack] = useState(null);\n  const [volume, setVolumeState] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n\n  // 监听音频状态\n  useEffect(() => {\n    if (audioRef.current) {\n      const audio = audioRef.current;\n      const timeUpdateHandler = () => {\n        setCurrentTime(audio.currentTime);\n        setDuration(audio.duration);\n      };\n      audio.addEventListener('timeupdate', timeUpdateHandler);\n      audio.addEventListener('loadedmetadata', timeUpdateHandler);\n      return () => {\n        audio.removeEventListener('timeupdate', timeUpdateHandler);\n        audio.removeEventListener('loadedmetadata', timeUpdateHandler);\n      };\n    }\n  }, [audioRef]);\n\n  // 增强版本的loadAudio和loadAudioFromUrl，会记录当前播放的曲目\n  const handleLoadAudio = file => {\n    loadAudio(file);\n    setCurrentTrack(file.name);\n  };\n  const handleLoadAudioFromUrl = url => {\n    loadAudioFromUrl(url);\n    setCurrentTrack(url.split('/').pop() || 'サンプル音楽');\n  };\n\n  // 音量调整处理\n  const handleSetVolume = newVolume => {\n    setVolumeState(newVolume);\n    setVolume(newVolume);\n  };\n  const value = {\n    audioData,\n    isPlaying,\n    currentTrack,\n    loadAudio: handleLoadAudio,\n    loadAudioFromUrl: handleLoadAudioFromUrl,\n    play,\n    pause,\n    stop,\n    setVolume: handleSetVolume,\n    volume,\n    currentTime,\n    duration,\n    seek\n  };\n  return /*#__PURE__*/_jsxDEV(AudioContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n// 迷你播放器组件，固定在屏幕底部\n_s2(AudioProvider, \"lVZRyGwqsPNnkd18jkJfYynbS9Q=\", false, function () {\n  return [useAudioAnalyzer];\n});\n_c = AudioProvider;\nexport const MiniPlayer = () => {\n  _s3();\n  const {\n    isPlaying,\n    currentTrack,\n    play,\n    pause,\n    currentTime,\n    duration,\n    seek,\n    volume,\n    setVolume\n  } = useAudioContext();\n\n  // 如果没有正在播放的曲目，不显示迷你播放器\n  if (!currentTrack) return null;\n\n  // 格式化时间显示\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n\n  // 计算进度百分比\n  const progressPercent = (currentTime / duration * 100 || 0) + '%';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(26, 26, 26, 0.95)',\n      padding: '10px 20px',\n      zIndex: 1000,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      backdropFilter: 'blur(10px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: isPlaying ? pause : play,\n        style: {\n          backgroundColor: '#9c27b0',\n          color: 'white',\n          border: 'none',\n          borderRadius: '50%',\n          width: '36px',\n          height: '36px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          cursor: 'pointer'\n        },\n        children: isPlaying ? '❚❚' : '▶'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'white',\n            fontSize: '0.9rem',\n            marginBottom: '4px'\n          },\n          children: currentTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#aaa',\n            fontSize: '0.8rem'\n          },\n          children: [formatTime(currentTime), \" / \", formatTime(duration)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: '0 20px',\n        cursor: 'pointer'\n      },\n      onClick: e => {\n        const rect = e.currentTarget.getBoundingClientRect();\n        const offsetX = e.clientX - rect.left;\n        const percentage = offsetX / rect.width;\n        seek(percentage * duration);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '4px',\n          backgroundColor: '#333',\n          borderRadius: '2px',\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            height: '100%',\n            width: progressPercent,\n            backgroundColor: '#ba68c8',\n            borderRadius: '2px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '10px',\n        width: '120px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#aaa',\n          fontSize: '0.8rem'\n        },\n        children: [Math.round(volume * 100), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.01\",\n        value: volume,\n        onChange: e => setVolume(parseFloat(e.target.value)),\n        style: {\n          width: '80px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s3(MiniPlayer, \"G/ebnUy89E8Xz6eJWo2vfWxp7bw=\", false, function () {\n  return [useAudioContext];\n});\n_c2 = MiniPlayer;\nvar _c, _c2;\n$RefreshReg$(_c, \"AudioProvider\");\n$RefreshReg$(_c2, \"MiniPlayer\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useAudioAnalyzer","jsxDEV","_jsxDEV","AudioContext","useAudioContext","_s","context","Error","AudioProvider","children","_s2","audioData","isPlaying","audioRef","loadAudio","loadAudioFromUrl","play","pause","stop","setVolume","seek","currentTrack","setCurrentTrack","volume","setVolumeState","currentTime","setCurrentTime","duration","setDuration","current","audio","timeUpdateHandler","addEventListener","removeEventListener","handleLoadAudio","file","name","handleLoadAudioFromUrl","url","split","pop","handleSetVolume","newVolume","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","MiniPlayer","_s3","formatTime","time","minutes","Math","floor","seconds","progressPercent","style","position","bottom","left","right","backgroundColor","padding","zIndex","display","alignItems","justifyContent","backdropFilter","gap","onClick","color","border","borderRadius","width","height","cursor","fontSize","marginBottom","flex","e","rect","currentTarget","getBoundingClientRect","offsetX","clientX","percentage","top","round","type","min","max","step","onChange","parseFloat","target","_c2","$RefreshReg$"],"sources":["C:/Users/20213/Desktop/web/src/context/AudioContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useRef, useEffect } from 'react';\r\nimport { useAudioAnalyzer } from '../hooks/useAudioAnalyzer';\r\n\r\ninterface AudioContextType {\r\n  audioData: any;\r\n  isPlaying: boolean;\r\n  currentTrack: string | null;\r\n  loadAudio: (file: File) => void;\r\n  loadAudioFromUrl: (url: string) => void;\r\n  play: () => void;\r\n  pause: () => void;\r\n  stop: () => void;\r\n  setVolume: (volume: number) => void;\r\n  volume: number;\r\n  currentTime: number;\r\n  duration: number;\r\n  seek: (time: number) => void;\r\n}\r\n\r\nconst AudioContext = createContext<AudioContextType | null>(null);\r\n\r\nexport const useAudioContext = () => {\r\n  const context = useContext(AudioContext);\r\n  if (!context) {\r\n    throw new Error('useAudioContext must be used within an AudioProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AudioProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const {\r\n    audioData,\r\n    isPlaying,\r\n    audioRef,\r\n    loadAudio,\r\n    loadAudioFromUrl,\r\n    play,\r\n    pause,\r\n    stop,\r\n    setVolume,\r\n    seek\r\n  } = useAudioAnalyzer();\r\n\r\n  const [currentTrack, setCurrentTrack] = useState<string | null>(null);\r\n  const [volume, setVolumeState] = useState(1);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n\r\n  // 监听音频状态\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      const audio = audioRef.current;\r\n      \r\n      const timeUpdateHandler = () => {\r\n        setCurrentTime(audio.currentTime);\r\n        setDuration(audio.duration);\r\n      };\r\n      \r\n      audio.addEventListener('timeupdate', timeUpdateHandler);\r\n      audio.addEventListener('loadedmetadata', timeUpdateHandler);\r\n      \r\n      return () => {\r\n        audio.removeEventListener('timeupdate', timeUpdateHandler);\r\n        audio.removeEventListener('loadedmetadata', timeUpdateHandler);\r\n      };\r\n    }\r\n  }, [audioRef]);\r\n\r\n  // 增强版本的loadAudio和loadAudioFromUrl，会记录当前播放的曲目\r\n  const handleLoadAudio = (file: File) => {\r\n    loadAudio(file);\r\n    setCurrentTrack(file.name);\r\n  };\r\n\r\n  const handleLoadAudioFromUrl = (url: string) => {\r\n    loadAudioFromUrl(url);\r\n    setCurrentTrack(url.split('/').pop() || 'サンプル音楽');\r\n  };\r\n\r\n  // 音量调整处理\r\n  const handleSetVolume = (newVolume: number) => {\r\n    setVolumeState(newVolume);\r\n    setVolume(newVolume);\r\n  };\r\n\r\n  const value = {\r\n    audioData,\r\n    isPlaying,\r\n    currentTrack,\r\n    loadAudio: handleLoadAudio,\r\n    loadAudioFromUrl: handleLoadAudioFromUrl,\r\n    play,\r\n    pause,\r\n    stop,\r\n    setVolume: handleSetVolume,\r\n    volume,\r\n    currentTime,\r\n    duration,\r\n    seek\r\n  };\r\n\r\n  return (\r\n    <AudioContext.Provider value={value}>\r\n      {children}\r\n    </AudioContext.Provider>\r\n  );\r\n};\r\n\r\n// 迷你播放器组件，固定在屏幕底部\r\nexport const MiniPlayer: React.FC = () => {\r\n  const { \r\n    isPlaying, \r\n    currentTrack, \r\n    play, \r\n    pause, \r\n    currentTime, \r\n    duration,\r\n    seek,\r\n    volume,\r\n    setVolume\r\n  } = useAudioContext();\r\n\r\n  // 如果没有正在播放的曲目，不显示迷你播放器\r\n  if (!currentTrack) return null;\r\n\r\n  // 格式化时间显示\r\n  const formatTime = (time: number) => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = Math.floor(time % 60);\r\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n  };\r\n\r\n  // 计算进度百分比\r\n  const progressPercent = ((currentTime / duration) * 100 || 0) + '%';\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      backgroundColor: 'rgba(26, 26, 26, 0.95)',\r\n      padding: '10px 20px',\r\n      zIndex: 1000,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      backdropFilter: 'blur(10px)'\r\n    }}>\r\n      <div style={{ display: 'flex', alignItems: 'center', gap: '15px' }}>\r\n        <button \r\n          onClick={isPlaying ? pause : play}\r\n          style={{\r\n            backgroundColor: '#9c27b0',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '50%',\r\n            width: '36px',\r\n            height: '36px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          {isPlaying ? '❚❚' : '▶'}\r\n        </button>\r\n        <div>\r\n          <div style={{ color: 'white', fontSize: '0.9rem', marginBottom: '4px' }}>\r\n            {currentTrack}\r\n          </div>\r\n          <div style={{ color: '#aaa', fontSize: '0.8rem' }}>\r\n            {formatTime(currentTime)} / {formatTime(duration)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ flex: 1, padding: '0 20px', cursor: 'pointer' }} \r\n           onClick={(e) => {\r\n             const rect = e.currentTarget.getBoundingClientRect();\r\n             const offsetX = e.clientX - rect.left;\r\n             const percentage = offsetX / rect.width;\r\n             seek(percentage * duration);\r\n           }}>\r\n        <div style={{ \r\n          height: '4px', \r\n          backgroundColor: '#333',\r\n          borderRadius: '2px',\r\n          position: 'relative'\r\n        }}>\r\n          <div style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            height: '100%',\r\n            width: progressPercent,\r\n            backgroundColor: '#ba68c8',\r\n            borderRadius: '2px'\r\n          }} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ display: 'flex', alignItems: 'center', gap: '10px', width: '120px' }}>\r\n        <span style={{ color: '#aaa', fontSize: '0.8rem' }}>\r\n          {Math.round(volume * 100)}%\r\n        </span>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          step=\"0.01\"\r\n          value={volume}\r\n          onChange={(e) => setVolume(parseFloat(e.target.value))}\r\n          style={{ width: '80px' }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}