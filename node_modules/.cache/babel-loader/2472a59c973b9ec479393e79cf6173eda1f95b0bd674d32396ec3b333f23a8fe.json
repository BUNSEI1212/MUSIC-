{"ast":null,"code":"import React,{createContext,useContext,useState,useRef,useEffect}from'react';// 音频数据类型定义\n// 音频上下文接口\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// 创建上下文\nconst AudioContext=/*#__PURE__*/createContext(null);// Provider组件\nexport const AudioProvider=_ref=>{let{children}=_ref;const[audioData,setAudioData]=useState({title:'',artist:'',duration:0,currentTime:0,isPlaying:false,volume:1});const audioContextRef=useRef(null);const analyserRef=useRef(null);const audioElementRef=useRef(null);const sourceNodeRef=useRef(null);useEffect(()=>{audioContextRef.current=new AudioContext();analyserRef.current=audioContextRef.current.createAnalyser();analyserRef.current.fftSize=2048;return()=>{if(audioContextRef.current){audioContextRef.current.close();}};},[]);const loadAudio=async file=>{const url=URL.createObjectURL(file);const audio=new Audio(url);audioElementRef.current=audio;audio.addEventListener('loadedmetadata',()=>{setAudioData(prev=>({...prev,title:file.name,artist:'Unknown Artist',duration:audio.duration}));});audio.addEventListener('timeupdate',()=>{setAudioData(prev=>({...prev,currentTime:audio.currentTime}));});audio.addEventListener('ended',()=>{setAudioData(prev=>({...prev,isPlaying:false,currentTime:0}));});if(sourceNodeRef.current){sourceNodeRef.current.disconnect();}sourceNodeRef.current=audioContextRef.current.createMediaElementSource(audio);sourceNodeRef.current.connect(analyserRef.current);analyserRef.current.connect(audioContextRef.current.destination);};const loadAudioFromUrl=async url=>{const audio=new Audio(url);audioElementRef.current=audio;audio.addEventListener('loadedmetadata',()=>{setAudioData(prev=>({...prev,title:url.split('/').pop()||'Unknown Track',artist:'Unknown Artist',duration:audio.duration}));});audio.addEventListener('timeupdate',()=>{setAudioData(prev=>({...prev,currentTime:audio.currentTime}));});audio.addEventListener('ended',()=>{setAudioData(prev=>({...prev,isPlaying:false,currentTime:0}));});if(sourceNodeRef.current){sourceNodeRef.current.disconnect();}sourceNodeRef.current=audioContextRef.current.createMediaElementSource(audio);sourceNodeRef.current.connect(analyserRef.current);analyserRef.current.connect(audioContextRef.current.destination);};const play=()=>{if(audioElementRef.current){audioElementRef.current.play();setAudioData(prev=>({...prev,isPlaying:true}));}};const pause=()=>{if(audioElementRef.current){audioElementRef.current.pause();setAudioData(prev=>({...prev,isPlaying:false}));}};const stop=()=>{if(audioElementRef.current){audioElementRef.current.pause();audioElementRef.current.currentTime=0;setAudioData(prev=>({...prev,isPlaying:false,currentTime:0}));}};const seek=time=>{if(audioElementRef.current){audioElementRef.current.currentTime=time;setAudioData(prev=>({...prev,currentTime:time}));}};const setVolume=volume=>{if(audioElementRef.current){audioElementRef.current.volume=volume;setAudioData(prev=>({...prev,volume}));}};return/*#__PURE__*/_jsx(AudioContext.Provider,{value:{audioData,loadAudio,loadAudioFromUrl,play,pause,stop,seek,setVolume,audioContext:audioContextRef.current,analyser:analyserRef.current,audioElement:audioElementRef.current,isPlaying:audioData.isPlaying,currentTime:audioData.currentTime,duration:audioData.duration,volume:audioData.volume,currentTrack:audioData.title},children:children});};// 使用上下文的Hook\nexport const useAudioContext=()=>{const context=useContext(AudioContext);if(!context){throw new Error('useAudioContext must be used within an AudioProvider');}return context;};// 迷你播放器组件，固定在屏幕底部\nexport const MiniPlayer=()=>{const{isPlaying,currentTrack,play,pause,currentTime,duration,seek,volume,setVolume}=useAudioContext();// 如果没有正在播放的曲目，不显示迷你播放器\nif(!currentTrack)return null;// 格式化时间显示\nconst formatTime=time=>{const minutes=Math.floor(time/60);const seconds=Math.floor(time%60);return`${minutes}:${seconds<10?'0':''}${seconds}`;};// 计算进度百分比\nconst progressPercent=(currentTime/duration*100||0)+'%';return/*#__PURE__*/_jsxs(\"div\",{style:{position:'fixed',bottom:0,left:0,right:0,backgroundColor:'rgba(26, 26, 26, 0.95)',padding:'10px 20px',zIndex:1000,display:'flex',alignItems:'center',justifyContent:'space-between',backdropFilter:'blur(10px)'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'15px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:isPlaying?pause:play,style:{backgroundColor:'#9c27b0',color:'white',border:'none',borderRadius:'50%',width:'36px',height:'36px',display:'flex',alignItems:'center',justifyContent:'center',cursor:'pointer'},children:isPlaying?'❚❚':'▶'}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{color:'white',fontSize:'0.9rem',marginBottom:'4px'},children:currentTrack}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'#aaa',fontSize:'0.8rem'},children:[formatTime(currentTime),\" / \",formatTime(duration)]})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{flex:1,padding:'0 20px',cursor:'pointer'},onClick:e=>{const rect=e.currentTarget.getBoundingClientRect();const offsetX=e.clientX-rect.left;const percentage=offsetX/rect.width;seek(percentage*duration);},children:/*#__PURE__*/_jsx(\"div\",{style:{height:'4px',backgroundColor:'#333',borderRadius:'2px',position:'relative'},children:/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:0,left:0,height:'100%',width:progressPercent,backgroundColor:'#ba68c8',borderRadius:'2px'}})})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'10px',width:'120px'},children:[/*#__PURE__*/_jsxs(\"span\",{style:{color:'#aaa',fontSize:'0.8rem'},children:[Math.round(volume*100),\"%\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"1\",step:\"0.01\",value:volume,onChange:e=>setVolume(parseFloat(e.target.value)),style:{width:'80px'}})]})]});};","map":{"version":3,"names":["React","createContext","useContext","useState","useRef","useEffect","jsx","_jsx","jsxs","_jsxs","AudioContext","AudioProvider","_ref","children","audioData","setAudioData","title","artist","duration","currentTime","isPlaying","volume","audioContextRef","analyserRef","audioElementRef","sourceNodeRef","current","createAnalyser","fftSize","close","loadAudio","file","url","URL","createObjectURL","audio","Audio","addEventListener","prev","name","disconnect","createMediaElementSource","connect","destination","loadAudioFromUrl","split","pop","play","pause","stop","seek","time","setVolume","Provider","value","audioContext","analyser","audioElement","currentTrack","useAudioContext","context","Error","MiniPlayer","formatTime","minutes","Math","floor","seconds","progressPercent","style","position","bottom","left","right","backgroundColor","padding","zIndex","display","alignItems","justifyContent","backdropFilter","gap","onClick","color","border","borderRadius","width","height","cursor","fontSize","marginBottom","flex","e","rect","currentTarget","getBoundingClientRect","offsetX","clientX","percentage","top","round","type","min","max","step","onChange","parseFloat","target"],"sources":["C:/Users/20213/Desktop/web/src/context/AudioContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useRef, useEffect } from 'react';\r\n\r\n// 音频数据类型定义\r\ninterface AudioData {\r\n  title: string;\r\n  artist: string;\r\n  duration: number;\r\n  currentTime: number;\r\n  isPlaying: boolean;\r\n  volume: number;\r\n}\r\n\r\n// 音频上下文接口\r\ninterface AudioContextType {\r\n  audioData: AudioData;\r\n  loadAudio: (file: File) => Promise<void>;\r\n  loadAudioFromUrl: (url: string) => Promise<void>;\r\n  play: () => void;\r\n  pause: () => void;\r\n  stop: () => void;\r\n  seek: (time: number) => void;\r\n  setVolume: (volume: number) => void;\r\n  audioContext: AudioContext | null;\r\n  analyser: AnalyserNode | null;\r\n  audioElement: HTMLAudioElement | null;\r\n  isPlaying: boolean;\r\n  currentTime: number;\r\n  duration: number;\r\n  volume: number;\r\n  currentTrack: string;\r\n}\r\n\r\n// 创建上下文\r\nconst AudioContext = createContext<AudioContextType | null>(null);\r\n\r\n// Provider组件\r\nexport const AudioProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [audioData, setAudioData] = useState<AudioData>({\r\n    title: '',\r\n    artist: '',\r\n    duration: 0,\r\n    currentTime: 0,\r\n    isPlaying: false,\r\n    volume: 1,\r\n  });\r\n\r\n  const audioContextRef = useRef<AudioContext | null>(null);\r\n  const analyserRef = useRef<AnalyserNode | null>(null);\r\n  const audioElementRef = useRef<HTMLAudioElement | null>(null);\r\n  const sourceNodeRef = useRef<MediaElementAudioSourceNode | null>(null);\r\n\r\n  useEffect(() => {\r\n    audioContextRef.current = new AudioContext();\r\n    analyserRef.current = audioContextRef.current.createAnalyser();\r\n    analyserRef.current.fftSize = 2048;\r\n\r\n    return () => {\r\n      if (audioContextRef.current) {\r\n        audioContextRef.current.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const loadAudio = async (file: File) => {\r\n    const url = URL.createObjectURL(file);\r\n    const audio = new Audio(url);\r\n    audioElementRef.current = audio;\r\n\r\n    audio.addEventListener('loadedmetadata', () => {\r\n      setAudioData(prev => ({\r\n        ...prev,\r\n        title: file.name,\r\n        artist: 'Unknown Artist',\r\n        duration: audio.duration,\r\n      }));\r\n    });\r\n\r\n    audio.addEventListener('timeupdate', () => {\r\n      setAudioData(prev => ({\r\n        ...prev,\r\n        currentTime: audio.currentTime,\r\n      }));\r\n    });\r\n\r\n    audio.addEventListener('ended', () => {\r\n      setAudioData(prev => ({\r\n        ...prev,\r\n        isPlaying: false,\r\n        currentTime: 0,\r\n      }));\r\n    });\r\n\r\n    if (sourceNodeRef.current) {\r\n      sourceNodeRef.current.disconnect();\r\n    }\r\n\r\n    sourceNodeRef.current = audioContextRef.current!.createMediaElementSource(audio);\r\n    sourceNodeRef.current.connect(analyserRef.current!);\r\n    analyserRef.current!.connect(audioContextRef.current!.destination);\r\n  };\r\n\r\n  const loadAudioFromUrl = async (url: string) => {\r\n    const audio = new Audio(url);\r\n    audioElementRef.current = audio;\r\n\r\n    audio.addEventListener('loadedmetadata', () => {\r\n      setAudioData(prev => ({\r\n        ...prev,\r\n        title: url.split('/').pop() || 'Unknown Track',\r\n        artist: 'Unknown Artist',\r\n        duration: audio.duration,\r\n      }));\r\n    });\r\n\r\n    audio.addEventListener('timeupdate', () => {\r\n      setAudioData(prev => ({\r\n        ...prev,\r\n        currentTime: audio.currentTime,\r\n      }));\r\n    });\r\n\r\n    audio.addEventListener('ended', () => {\r\n      setAudioData(prev => ({\r\n        ...prev,\r\n        isPlaying: false,\r\n        currentTime: 0,\r\n      }));\r\n    });\r\n\r\n    if (sourceNodeRef.current) {\r\n      sourceNodeRef.current.disconnect();\r\n    }\r\n\r\n    sourceNodeRef.current = audioContextRef.current!.createMediaElementSource(audio);\r\n    sourceNodeRef.current.connect(analyserRef.current!);\r\n    analyserRef.current!.connect(audioContextRef.current!.destination);\r\n  };\r\n\r\n  const play = () => {\r\n    if (audioElementRef.current) {\r\n      audioElementRef.current.play();\r\n      setAudioData(prev => ({ ...prev, isPlaying: true }));\r\n    }\r\n  };\r\n\r\n  const pause = () => {\r\n    if (audioElementRef.current) {\r\n      audioElementRef.current.pause();\r\n      setAudioData(prev => ({ ...prev, isPlaying: false }));\r\n    }\r\n  };\r\n\r\n  const stop = () => {\r\n    if (audioElementRef.current) {\r\n      audioElementRef.current.pause();\r\n      audioElementRef.current.currentTime = 0;\r\n      setAudioData(prev => ({\r\n        ...prev,\r\n        isPlaying: false,\r\n        currentTime: 0,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const seek = (time: number) => {\r\n    if (audioElementRef.current) {\r\n      audioElementRef.current.currentTime = time;\r\n      setAudioData(prev => ({ ...prev, currentTime: time }));\r\n    }\r\n  };\r\n\r\n  const setVolume = (volume: number) => {\r\n    if (audioElementRef.current) {\r\n      audioElementRef.current.volume = volume;\r\n      setAudioData(prev => ({ ...prev, volume }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AudioContext.Provider\r\n      value={{\r\n        audioData,\r\n        loadAudio,\r\n        loadAudioFromUrl,\r\n        play,\r\n        pause,\r\n        stop,\r\n        seek,\r\n        setVolume,\r\n        audioContext: audioContextRef.current,\r\n        analyser: analyserRef.current,\r\n        audioElement: audioElementRef.current,\r\n        isPlaying: audioData.isPlaying,\r\n        currentTime: audioData.currentTime,\r\n        duration: audioData.duration,\r\n        volume: audioData.volume,\r\n        currentTrack: audioData.title\r\n      }}\r\n    >\r\n      {children}\r\n    </AudioContext.Provider>\r\n  );\r\n};\r\n\r\n// 使用上下文的Hook\r\nexport const useAudioContext = () => {\r\n  const context = useContext(AudioContext);\r\n  if (!context) {\r\n    throw new Error('useAudioContext must be used within an AudioProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// 迷你播放器组件，固定在屏幕底部\r\nexport const MiniPlayer: React.FC = () => {\r\n  const { \r\n    isPlaying, \r\n    currentTrack, \r\n    play, \r\n    pause, \r\n    currentTime, \r\n    duration,\r\n    seek,\r\n    volume,\r\n    setVolume\r\n  } = useAudioContext();\r\n\r\n  // 如果没有正在播放的曲目，不显示迷你播放器\r\n  if (!currentTrack) return null;\r\n\r\n  // 格式化时间显示\r\n  const formatTime = (time: number) => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = Math.floor(time % 60);\r\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n  };\r\n\r\n  // 计算进度百分比\r\n  const progressPercent = ((currentTime / duration) * 100 || 0) + '%';\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      backgroundColor: 'rgba(26, 26, 26, 0.95)',\r\n      padding: '10px 20px',\r\n      zIndex: 1000,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      backdropFilter: 'blur(10px)'\r\n    }}>\r\n      <div style={{ display: 'flex', alignItems: 'center', gap: '15px' }}>\r\n        <button \r\n          onClick={isPlaying ? pause : play}\r\n          style={{\r\n            backgroundColor: '#9c27b0',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '50%',\r\n            width: '36px',\r\n            height: '36px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          {isPlaying ? '❚❚' : '▶'}\r\n        </button>\r\n        <div>\r\n          <div style={{ color: 'white', fontSize: '0.9rem', marginBottom: '4px' }}>\r\n            {currentTrack}\r\n          </div>\r\n          <div style={{ color: '#aaa', fontSize: '0.8rem' }}>\r\n            {formatTime(currentTime)} / {formatTime(duration)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ flex: 1, padding: '0 20px', cursor: 'pointer' }} \r\n           onClick={(e) => {\r\n             const rect = e.currentTarget.getBoundingClientRect();\r\n             const offsetX = e.clientX - rect.left;\r\n             const percentage = offsetX / rect.width;\r\n             seek(percentage * duration);\r\n           }}>\r\n        <div style={{ \r\n          height: '4px', \r\n          backgroundColor: '#333',\r\n          borderRadius: '2px',\r\n          position: 'relative'\r\n        }}>\r\n          <div style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            height: '100%',\r\n            width: progressPercent,\r\n            backgroundColor: '#ba68c8',\r\n            borderRadius: '2px'\r\n          }} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ display: 'flex', alignItems: 'center', gap: '10px', width: '120px' }}>\r\n        <span style={{ color: '#aaa', fontSize: '0.8rem' }}>\r\n          {Math.round(volume * 100)}%\r\n        </span>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          step=\"0.01\"\r\n          value={volume}\r\n          onChange={(e) => setVolume(parseFloat(e.target.value))}\r\n          style={{ width: '80px' }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}